{"version":3,"sources":["api/backend.js","components/Spans.js","components/TextArea.js","components/App.js","index.js"],"names":["axios","create","baseURL","PositiveSpan","props","style","backgroundColor","children","NegativeSpan","MixedSpan","NeutralSpan","TextArea","onChange","editorState","a","text","getCurrentContent","getPlainText","endsWith","backend","post","content","response","data","sentences","compositeData","i","sentiment","span","push","strategy","contentBlock","callback","getText","search","length","component","spanHighlight","CompositeDecorator","setState","EditorState","set","decorator","spanStrategy","state","formattedContent","createEmpty","textArea","React","createRef","this","Component","App","className","ReactDOM","render","document","querySelector"],"mappings":"0SAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,0BCAAC,EAAe,SAACC,GACzB,OACI,0CAAUA,EAAV,CAAiBC,MAAO,CAAEC,gBAAiB,WAAYF,EAAMG,WAIxDC,EAAe,SAACJ,GACzB,OACI,0CAAUA,EAAV,CAAiBC,MAAO,CAAEC,gBAAiB,SAAUF,EAAMG,WAItDE,EAAY,SAACL,GACtB,OACI,0CAAUA,EAAV,CAAiBC,MAAO,CAAEC,gBAAiB,YAAaF,EAAMG,WAIzDG,EAAc,SAACN,GACxB,OACI,yBAAUA,EAAQA,EAAMG,WC2CjBI,G,gEAxDX,WAAYP,GAAQ,IAAD,8BACf,cAAMA,IAMVQ,SAPmB,uCAOR,WAAMC,GAAN,mBAAAC,EAAA,4DACDC,EAAOF,EAAYG,oBAAoBC,gBACrCC,SAAS,MAAQH,EAAKG,SAAS,MAAQH,EAAKG,SAAS,MAFtD,yCAAAJ,EAAA,0CAAAA,EAAA,sEAGoBK,EAAQC,KAAK,cAAe,CAC/CC,QAASN,IAJV,OASH,IANMO,EAHH,OAMGC,EAAOD,EAASC,KAAKC,UACvBC,EAAgB,GAPjB,WASMC,GACqB,aAAtBH,EAAKG,GAAGC,UACRC,EAAOzB,EACsB,aAAtBoB,EAAKG,GAAGC,UACfC,EAAQpB,EACqB,UAAtBe,EAAKG,GAAGC,UACfC,EAAOnB,EACsB,YAAtBc,EAAKG,GAAGC,YACfC,EAAOlB,GAEXe,EAAcI,KAAK,CACfC,SAAU,SAACC,EAAcC,IACgC,IAAjDD,EAAaE,UAAUC,OAAOX,EAAKG,GAAGX,OACtCiB,EAASD,EAAaE,UAAUC,OAAOX,EAAKG,GAAGX,MAAOgB,EAAaE,UAAUC,OAAOX,EAAKG,GAAGX,MAAQQ,EAAKG,GAAGX,KAAKoB,SAGzHC,UAAWR,KAhBVF,EAAI,EAAGA,EAAIH,EAAKY,OAAQT,IAAM,EAA9BA,GAoBLW,EAAgB,IAAIC,qBAAmBb,GAC3C,EAAKc,SAAS,CAAC1B,YAAa2B,cAAYC,IAAI5B,EAAa,CAAC6B,UAAWL,MA9BlE,iFAgCH,EAAKE,SAAS,CAAC1B,gBAhCZ,2CAPQ,wDA2CnB8B,aAAe,SAACZ,EAAcC,IACqB,IAA3CD,EAAaE,UAAUC,OAAO,SAC9BF,EAASD,EAAaE,UAAUC,OAAO,QAASH,EAAaE,UAAUC,OAAO,QAAU,OAAOC,SA1CnG,EAAKS,MAAQ,CAAEvB,QAAS,GAAIwB,iBAAkB,GAAIhC,YAAa2B,cAAYM,eAC3E,EAAKC,SAAWC,IAAMC,YAJP,E,qDAkDf,OACI,kBAAC,SAAD,CAAQpC,YAAaqC,KAAKN,MAAM/B,YAAaD,SAAUsC,KAAKtC,e,GApDjDuC,cCURC,E,uKAZP,OACI,6BACI,wBAAIC,UAAU,iCACV,uBAAGA,UAAU,uBADjB,sBAIA,kBAAC,EAAD,W,GAREF,aCAlBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.ad785ce1.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:8000'\r\n});","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\n\r\nexport const PositiveSpan = (props) => {\r\n    return (\r\n        <span {...props} style={{ backgroundColor: 'green' }}>{props.children}</span>\r\n    );\r\n};\r\n\r\nexport const NegativeSpan = (props) => {\r\n    return (\r\n        <span {...props} style={{ backgroundColor: 'red' }}>{props.children}</span>\r\n    );\r\n};\r\n\r\nexport const MixedSpan = (props) => {\r\n    return (\r\n        <span {...props} style={{ backgroundColor: 'yellow' }}>{props.children}</span>\r\n    );\r\n};\r\n\r\nexport const NeutralSpan = (props) => {\r\n    return (\r\n        <span {...props}>{props.children}</span>\r\n    );\r\n};","import React, { Component } from 'react';\r\nimport {Editor, EditorState, CompositeDecorator} from 'draft-js';\r\nimport backend from '../api/backend';\r\n\r\nimport {PositiveSpan, NegativeSpan, MixedSpan, NeutralSpan} from './Spans'\r\n\r\nimport 'draft-js/dist/Draft.css';\r\nimport './TextArea.css';\r\n\r\nclass TextArea extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { content: '', formattedContent: '', editorState: EditorState.createEmpty() };\r\n        this.textArea = React.createRef();\r\n    }\r\n\r\n    onChange = async editorState => {\r\n        const text = editorState.getCurrentContent().getPlainText();\r\n        if(text.endsWith('.') || text.endsWith('!') || text.endsWith('?')) {\r\n            const response = await backend.post('/finalScore', {\r\n                content: text\r\n            })\r\n            const data = response.data.sentences;\r\n            var compositeData = [];\r\n            var span;\r\n            for (let i = 0; i < data.length; i++) {\r\n                if (data[i].sentiment === 'positive') {\r\n                    span = PositiveSpan;\r\n                } else if (data[i].sentiment === 'negative') {\r\n                    span =  NegativeSpan;\r\n                } else if (data[i].sentiment === 'mixed') {\r\n                    span = MixedSpan;\r\n                } else if (data[i].sentiment === 'neutral') {\r\n                    span = NeutralSpan;\r\n                }\r\n                compositeData.push({\r\n                    strategy: (contentBlock, callback) => {\r\n                        if (contentBlock.getText().search(data[i].text) !== -1) {\r\n                            callback(contentBlock.getText().search(data[i].text), contentBlock.getText().search(data[i].text) + data[i].text.length);\r\n                        }                \r\n                    },\r\n                    component: span\r\n                    },    \r\n                );\r\n            }\r\n            let spanHighlight = new CompositeDecorator(compositeData);\r\n            this.setState({editorState: EditorState.set(editorState, {decorator: spanHighlight})});\r\n        } else {\r\n            this.setState({editorState});\r\n        }\r\n    }\r\n\r\n    spanStrategy = (contentBlock, callback) => {\r\n        if (contentBlock.getText().search('what') !== -1) {\r\n            callback(contentBlock.getText().search('what'), contentBlock.getText().search('what') + 'what'.length);\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <Editor editorState={this.state.editorState} onChange={this.onChange} />\r\n        );\r\n    }\r\n}\r\n \r\nexport default TextArea;","import React, { Component } from 'react';\r\n\r\nimport './App.css';\r\nimport TextArea from './TextArea';\r\n\r\nclass App extends Component {\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1 className=\"ui center aligned icon header\">\r\n                    <i className=\"smile outline icon\" />\r\n                    Sentiment Analysis\r\n                </h1>\r\n                <TextArea />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}