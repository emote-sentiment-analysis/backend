{"version":3,"sources":["api/backend.js","components/Explanation.js","components/Meaning.js","components/Suggestion.js","components/App.js","index.js"],"names":["axios","create","baseURL","Explanation","props","state","card","Transition","Group","animation","duration","this","className","nextProps","Component","Meaning","onButtonClick","e","target","innerHTML","toLowerCase","setState","Fragment","Button","basic","color","content","onClick","Suggestion","negative","Or","positive","App","editorState","EditorState","createEmpty","findWithRegex","regex","contentBlock","callback","matchArr","start","text","getText","exec","index","length","onTextAreaChange","a","getCurrentContent","getPlainText","endsWith","backend","post","response","data","sentences","holisticResponse","compositeData","i","sentiment","RegExp","push","strategy","component","Popup","trigger","style","backgroundColor","children","good","join","bad","scores","neutral","spanHighlight","CompositeDecorator","set","decorator","onChange","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4f5d5982.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:8000'\r\n});","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport { Transition } from 'semantic-ui-react';\r\n\r\nclass Explanation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { card: '' }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps) {\r\n        return {\r\n            card: nextProps.card,\r\n        };\r\n    }       \r\n\r\n    render() { \r\n        return (\r\n            <Transition.Group animation=\"fade down\" duration=\"500\">\r\n                {this.state.card === 'positive' && (\r\n                    <div className=\"ui message\">\r\n                        <div className=\"header\">\r\n                            Positive\r\n                        </div>\r\n                        <div className=\"ui  placeholder\">\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"line\"></div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {this.state.card === 'mixed' && (\r\n                    <div className=\"ui message\">\r\n                        <div className=\"header\">\r\n                            Mixed\r\n                        </div>\r\n                        <div className=\"ui  placeholder\">\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"line\"></div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {this.state.card === 'negative' && (\r\n                    <div className=\"ui message\">\r\n                        <div className=\"header\">\r\n                            Negative\r\n                        </div>\r\n                        <div className=\"ui  placeholder\">\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"line\"></div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {this.state.card === 'neutral' && (\r\n                    <div className=\"ui message\">\r\n                        <div className=\"header\">\r\n                            Neutral\r\n                        </div>\r\n                        <div className=\"ui  placeholder\">\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"line\"></div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Transition.Group>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Explanation;","import React, { Component } from 'react';\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nimport Explanation from './Explanation';\r\n\r\nclass Meaning extends Component {\r\n    state = { card: false };\r\n\r\n    onButtonClick = e => {\r\n        if (this.state.card === e.target.innerHTML.toLowerCase()) {\r\n            this.setState({ card: '' })\r\n        } else {\r\n            this.setState({ card: e.target.innerHTML.toLowerCase() });\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"ui text center aligned container\">\r\n                    <Button basic color=\"green\" content=\"Positive\" onClick={this.onButtonClick} />\r\n                    <Button basic color=\"yellow\" content=\"Mixed\" onClick={this.onButtonClick} />\r\n                    <Button basic color=\"red\" content=\"Negative\" onClick={this.onButtonClick} />\r\n                    <Button basic content=\"Neutral\" onClick={this.onButtonClick} />\r\n                </div>\r\n                <Explanation card={this.state.card} />\r\n            </ React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Meaning;","import React, { Component } from 'react';\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nclass Suggestion extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div className=\"ui text center aligned container\">\r\n                    <Button.Group>\r\n                        <Button negative>Make it negative!</Button>\r\n                        <Button.Or />\r\n                        <Button positive>Make it positive!</Button>\r\n                    </Button.Group>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Suggestion;","import React, { Component } from 'react';\r\nimport {Editor, EditorState, CompositeDecorator} from 'draft-js';\r\nimport { Popup } from 'semantic-ui-react'\r\nimport backend from '../api/backend';\r\n\r\nimport './App.css';\r\nimport 'draft-js/dist/Draft.css';\r\nimport Meaning from './Meaning';\r\nimport Suggestion from './Suggestion';\r\n\r\nclass App extends Component {\r\n    state = { editorState: EditorState.createEmpty() };\r\n\r\n    findWithRegex = (regex, contentBlock, callback) => {\r\n        const text = contentBlock.getText();\r\n        let matchArr, start, end;\r\n        while ((matchArr = regex.exec(text)) !== null) {\r\n          start = matchArr.index;\r\n          end = start + matchArr[0].length;\r\n          callback(start, end);\r\n        }\r\n    };\r\n\r\n    onTextAreaChange = async editorState => {\r\n        const text = editorState.getCurrentContent().getPlainText();\r\n        if(text.endsWith('.') || text.endsWith('!') || text.endsWith('?')) {\r\n            const response = await backend.post('/finalScore', {\r\n                content: text\r\n            });\r\n            const data = response.data.sentences;\r\n            const holisticResponse = await backend.post('/score', {\r\n                content: text\r\n            });\r\n            var compositeData = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                let color = 'none';\r\n                if (data[i].sentiment === 'positive') {\r\n                    color = '#21ba45';\r\n                } else if (data[i].sentiment === 'negative') {\r\n                    color = '#db2828';\r\n                } else if (data[i].sentiment === 'mixed') {\r\n                    color = 'yellow';\r\n                }\r\n                let regex = new RegExp(data[i].text, 'g');\r\n                compositeData.push({\r\n                    strategy: (contentBlock, callback) => {\r\n                        this.findWithRegex(regex, contentBlock, callback);\r\n                    },\r\n                    component: (props) => {\r\n                        return (\r\n                            <Popup trigger={<span {...props} style={{ backgroundColor: color }}>{props.children}</span>}> \r\n                                <b>Key Positive Words: </b>{holisticResponse.data.good.join(', ')}<br />\r\n                                <b>Key Negative Words: </b>{holisticResponse.data.bad.join(', ')}<br /><br />\r\n                                <b>Confidence Scores:</b><br />\r\n                                <b>Positive: </b>{data[i].scores.positive}<br />\r\n                                <b>Neutral: </b>{data[i].scores.neutral}<br />\r\n                                <b>Negative: </b>{data[i].scores.negative}\r\n                            </Popup>\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n            let spanHighlight = new CompositeDecorator(compositeData);\r\n            this.setState({editorState: EditorState.set(this.state.editorState, {decorator: spanHighlight})});\r\n        } else {\r\n            this.setState({editorState});\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"ui text container\">\r\n                <h1 className=\"ui center aligned icon huge header\">\r\n                    Sentiment Analysis\r\n                </h1>\r\n\r\n                <Editor className=\"text-area\" editorState={this.state.editorState} onChange={this.onTextAreaChange} />\r\n                <Suggestion />\r\n                <h2 className=\"color-header ui center aligned icon header\">\r\n                    What do the colors mean?\r\n                </h2>\r\n                <Meaning />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}