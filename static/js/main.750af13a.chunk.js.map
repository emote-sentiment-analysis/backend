{"version":3,"sources":["api/backend.js","components/TextArea.js","components/App.js","index.js"],"names":["axios","create","baseURL","TextArea","props","findWithRegex","regex","contentBlock","callback","matchArr","start","text","getText","exec","index","length","onChange","editorState","a","getCurrentContent","getPlainText","endsWith","backend","post","content","response","data","sentences","holisticResponse","compositeData","i","color","sentiment","RegExp","push","strategy","component","Popup","trigger","style","backgroundColor","children","good","join","bad","scores","positive","neutral","negative","spanHighlight","CompositeDecorator","setState","EditorState","set","state","decorator","createEmpty","textArea","React","createRef","this","Component","App","className","ReactDOM","render","document","querySelector"],"mappings":"2VAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,0BC4EEC,G,gEAtEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVC,cAAgB,SAACC,EAAOC,EAAcC,GAGlC,IAFA,IACIC,EAAUC,EADRC,EAAOJ,EAAaK,UAEe,QAAjCH,EAAWH,EAAMO,KAAKF,KAG5BH,EAFAE,EAAQD,EAASK,MACXJ,EAAQD,EAAS,GAAGM,SAZb,EAiBnBC,SAjBmB,uCAiBR,WAAMC,GAAN,iBAAAC,EAAA,4DACDP,EAAOM,EAAYE,oBAAoBC,gBACrCC,SAAS,MAAQV,EAAKU,SAAS,MAAQV,EAAKU,SAAS,MAFtD,yCAAAH,EAAA,4CAAAA,EAAA,sEAGoBI,EAAQC,KAAK,cAAe,CAC/CC,QAASb,IAJV,cAGGc,EAHH,OAMGC,EAAOD,EAASC,KAAKC,UANxB,SAO4BL,EAAQC,KAAK,SAAU,CAClDC,QAASb,IARV,OAWH,IAJMiB,EAPH,OAUCC,EAAgB,GAVjB,WAWMC,GACL,IAAIC,EAAQ,OACc,aAAtBL,EAAKI,GAAGE,UACRD,EAAQ,QACqB,aAAtBL,EAAKI,GAAGE,UACfD,EAAQ,MACqB,UAAtBL,EAAKI,GAAGE,YACfD,EAAQ,UAEZ,IAAIzB,EAAQ,IAAI2B,OAAOP,EAAKI,GAAGnB,KAAM,KACrCkB,EAAcK,KAAK,CACfC,SAAU,SAAC5B,EAAcC,GACrB,EAAKH,cAAcC,EAAOC,EAAcC,IAE5C4B,UAAW,SAAChC,GACR,OACI,kBAACiC,EAAA,EAAD,CAAOC,QAAS,0CAAUlC,EAAV,CAAiBmC,MAAO,CAAEC,gBAAiBT,KAAU3B,EAAMqC,WACvE,mDAA4Bb,EAAiBF,KAAKgB,KAAKC,KAAK,MAAM,6BAClE,mDAA4Bf,EAAiBF,KAAKkB,IAAID,KAAK,MAAM,6BAAM,6BACvE,iDAAyB,6BACzB,yCAAkBjB,EAAKI,GAAGe,OAAOC,SAAS,6BAC1C,wCAAiBpB,EAAKI,GAAGe,OAAOE,QAAQ,6BACxC,yCAAkBrB,EAAKI,GAAGe,OAAOG,cAtB5ClB,EAAI,EAAGA,EAAIJ,EAAKX,OAAQe,IAAM,EAA9BA,GA4BLmB,EAAgB,IAAIC,qBAAmBrB,GAC3C,EAAKsB,SAAS,CAAClC,YAAamC,cAAYC,IAAI,EAAKC,MAAMrC,YAAa,CAACsC,UAAWN,MAxC7E,kFA0CH,EAAKE,SAAS,CAAClC,gBA1CZ,2CAjBQ,sDAGf,EAAKqC,MAAQ,CAAErC,YAAamC,cAAYI,eACxC,EAAKC,SAAWC,IAAMC,YAJP,E,qDAgEf,OACI,kBAAC,SAAD,CAAQ1C,YAAa2C,KAAKN,MAAMrC,YAAaD,SAAU4C,KAAK5C,e,GAlEjD6C,cCWRC,E,uKAZP,OACI,6BACI,wBAAIC,UAAU,iCACV,uBAAGA,UAAU,uBADjB,sBAIA,kBAAC,EAAD,W,GAREF,aCAlBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.750af13a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:8000'\r\n});","import React, { Component } from 'react';\r\nimport {Editor, EditorState, CompositeDecorator} from 'draft-js';\r\nimport { Popup } from 'semantic-ui-react'\r\nimport backend from '../api/backend';\r\n\r\nimport 'draft-js/dist/Draft.css';\r\nimport './TextArea.css';\r\n\r\nclass TextArea extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { editorState: EditorState.createEmpty() };\r\n        this.textArea = React.createRef();\r\n    }\r\n\r\n    findWithRegex = (regex, contentBlock, callback) => {\r\n        const text = contentBlock.getText();\r\n        let matchArr, start, end;\r\n        while ((matchArr = regex.exec(text)) !== null) {\r\n          start = matchArr.index;\r\n          end = start + matchArr[0].length;\r\n          callback(start, end);\r\n        }\r\n    };\r\n\r\n    onChange = async editorState => {\r\n        const text = editorState.getCurrentContent().getPlainText();\r\n        if(text.endsWith('.') || text.endsWith('!') || text.endsWith('?')) {\r\n            const response = await backend.post('/finalScore', {\r\n                content: text\r\n            });\r\n            const data = response.data.sentences;\r\n            const holisticResponse = await backend.post('/score', {\r\n                content: text\r\n            });\r\n            var compositeData = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                let color = 'none';\r\n                if (data[i].sentiment === 'positive') {\r\n                    color = 'green';\r\n                } else if (data[i].sentiment === 'negative') {\r\n                    color = 'red';\r\n                } else if (data[i].sentiment === 'mixed') {\r\n                    color = 'yellow';\r\n                }\r\n                let regex = new RegExp(data[i].text, 'g');\r\n                compositeData.push({\r\n                    strategy: (contentBlock, callback) => {\r\n                        this.findWithRegex(regex, contentBlock, callback);\r\n                    },\r\n                    component: (props) => {\r\n                        return (\r\n                            <Popup trigger={<span {...props} style={{ backgroundColor: color }}>{props.children}</span>}> \r\n                                <b>Key Positive Words: </b>{holisticResponse.data.good.join(', ')}<br />\r\n                                <b>Key Negative Words: </b>{holisticResponse.data.bad.join(', ')}<br /><br />\r\n                                <b>Confidence Scores:</b><br />\r\n                                <b>Positive: </b>{data[i].scores.positive}<br />\r\n                                <b>Neutral: </b>{data[i].scores.neutral}<br />\r\n                                <b>Negative: </b>{data[i].scores.negative}\r\n                            </Popup>\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n            let spanHighlight = new CompositeDecorator(compositeData);\r\n            this.setState({editorState: EditorState.set(this.state.editorState, {decorator: spanHighlight})});\r\n        } else {\r\n            this.setState({editorState});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Editor editorState={this.state.editorState} onChange={this.onChange} />\r\n        );\r\n    }\r\n}\r\n \r\nexport default TextArea;","import React, { Component } from 'react';\r\n\r\nimport './App.css';\r\nimport TextArea from './TextArea';\r\n\r\nclass App extends Component {\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1 className=\"ui center aligned icon header\">\r\n                    <i className=\"smile outline icon\" />\r\n                    Sentiment Analysis\r\n                </h1>\r\n                <TextArea />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}