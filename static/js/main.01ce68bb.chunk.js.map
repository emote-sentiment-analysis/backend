{"version":3,"sources":["api/backend.js","components/Explanation.js","components/Meaning.js","components/Suggestion.js","components/Hashtags.js","components/App.js","index.js"],"names":["axios","create","baseURL","Explanation","props","state","card","Transition","Group","animation","duration","this","className","nextProps","Component","Meaning","onButtonClick","e","target","innerHTML","toLowerCase","setState","Fragment","Button","basic","color","content","onClick","Suggestion","positiveOpen","negativeOpen","Modal","trigger","negative","onOpen","open","Header","Content","data","map","sentence","index","posTopics","length","Popup","key","text","posSuggested","Actions","Or","positive","negTopics","negSuggested","Hashtags","hashtags","hashtag","App","editorState","EditorState","createEmpty","topicData","findWithRegex","regex","contentBlock","callback","matchArr","start","getText","exec","onTextAreaChange","a","getCurrentContent","getPlainText","endsWith","backend","post","response","sentences","compositeData","i","x","aspects","sentiment","push","opinion","parseInt","relations","ref","split","slice","opinions","get","replace","word","RegExp","strategy","component","style","backgroundColor","children","join","scores","neutral","holisticResponse","spanHighlight","CompositeDecorator","set","decorator","top_tags","b","onChange","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.01ce68bb.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:8000'\r\n});","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport { Transition } from 'semantic-ui-react';\r\n\r\nclass Explanation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { card: '' }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps) {\r\n        return {\r\n            card: nextProps.card,\r\n        };\r\n    }       \r\n\r\n    render() { \r\n        return (\r\n            <Transition.Group animation=\"fade down\" duration=\"500\">\r\n                {this.state.card === 'positive' && (\r\n                    <div className=\"ui message\">\r\n                        <div className=\"header\">\r\n                            Positive\r\n                        </div>\r\n                        <div className=\"ui  placeholder\">\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"line\"></div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {this.state.card === 'mixed' && (\r\n                    <div className=\"ui message\">\r\n                        <div className=\"header\">\r\n                            Mixed\r\n                        </div>\r\n                        <div className=\"ui  placeholder\">\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"line\"></div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {this.state.card === 'negative' && (\r\n                    <div className=\"ui message\">\r\n                        <div className=\"header\">\r\n                            Negative\r\n                        </div>\r\n                        <div className=\"ui  placeholder\">\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"line\"></div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {this.state.card === 'neutral' && (\r\n                    <div className=\"ui message\">\r\n                        <div className=\"header\">\r\n                            Neutral\r\n                        </div>\r\n                        <div className=\"ui  placeholder\">\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"line\"></div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Transition.Group>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Explanation;","import React, { Component } from 'react';\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nimport Explanation from './Explanation';\r\n\r\nclass Meaning extends Component {\r\n    state = { card: false };\r\n\r\n    onButtonClick = e => {\r\n        if (this.state.card === e.target.innerHTML.toLowerCase()) {\r\n            this.setState({ card: '' })\r\n        } else {\r\n            this.setState({ card: e.target.innerHTML.toLowerCase() });\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"ui text center aligned container\">\r\n                    <Button basic color=\"green\" content=\"Positive\" onClick={this.onButtonClick} />\r\n                    <Button basic color=\"yellow\" content=\"Mixed\" onClick={this.onButtonClick} />\r\n                    <Button basic color=\"red\" content=\"Negative\" onClick={this.onButtonClick} />\r\n                    <Button basic content=\"Neutral\" onClick={this.onButtonClick} />\r\n                </div>\r\n                <Explanation card={this.state.card} />\r\n            </ React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Meaning;","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport { Button, Modal, Popup } from 'semantic-ui-react'\r\n\r\nclass Suggestion extends Component {\r\n    state = { positiveOpen: false, negativeOpen: false };\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"ui text center aligned container\">\r\n                <Button.Group>\r\n                    <Modal trigger={<Button negative>Make it negative!</Button>} onOpen={() => {this.setState({ negativeOpen: true })}} open={this.state.negativeOpen}>\r\n                        <Modal.Header>Make it negative!</Modal.Header>\r\n                        <Modal.Content>\r\n                            <h4>These are some of the most positive sentences. In order to make \r\n                                these sentences negative you may want to change these sentences. \r\n                                You can click on a sentence to recieve feedback and additional \r\n                                information on how to make it negative.</h4>\r\n                            {this.props.data.map((sentence, index) => {\r\n                                if (sentence.posTopics.length > 0) {\r\n                                    return (\r\n                                        <Popup key={index} trigger={<p>{sentence.sentence.text}</p>}>\r\n                                            <h4>Negative Topics:</h4>\r\n                                            {sentence.posTopics}\r\n                                            <h4>Suggested Replacement Sentence:</h4>\r\n                                            <p>{sentence.posSuggested}</p>\r\n                                        </Popup>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </Modal.Content>\r\n                        <Modal.Actions>\r\n                            <Button color='red' onClick={() => {this.setState({ negativeOpen: false })}}>Close</Button>\r\n                        </Modal.Actions>\r\n                    </Modal>\r\n                    <Button.Or />\r\n                    <Modal trigger={<Button positive>Make it positive!</Button>} onOpen={() => {this.setState({ positiveOpen: true })}} open={this.state.positiveOpen}>\r\n                        <Modal.Header>Make it positive!</Modal.Header>\r\n                        <Modal.Content>\r\n                            <h4>These are some of the most negative sentences. In order to make \r\n                                these sentences positive you may want to change these sentences. \r\n                                You can click on a sentence to recieve feedback and additional \r\n                                information on how to make it positive.</h4>\r\n                            {this.props.data.map((sentence, index) => {\r\n                                if (sentence.negTopics.length > 0) {\r\n                                    return (\r\n                                        <Popup key={index} trigger={<p>{sentence.sentence.text}</p>}>\r\n                                            <h4>Negative Topics:</h4>\r\n                                            {sentence.negTopics}\r\n                                            <h4>Suggested Replacement Sentence:</h4>\r\n                                            <p>{sentence.negSuggested}</p>\r\n                                        </Popup>\r\n                                    )\r\n                                }\r\n                            })}\r\n\r\n                        </Modal.Content>\r\n                        <Modal.Actions>\r\n                            <Button color='red' onClick={() => {this.setState({ positiveOpen: false })}}>Close</Button>\r\n                        </Modal.Actions>\r\n                    </Modal>\r\n                </Button.Group>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Suggestion;","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\n\r\nclass Hashtags extends Component {\r\n    render() { \r\n        const hashtags = this.props.hashtags.map((hashtag, index) => {\r\n            return <a key={index}>{hashtag} </a>;\r\n        })\r\n        return (\r\n            <div className=\"ui text center aligned container\">\r\n                {hashtags}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Hashtags;","import React, { Component } from 'react';\r\nimport {Editor, EditorState, CompositeDecorator} from 'draft-js';\r\nimport { Popup } from 'semantic-ui-react'\r\nimport axios from 'axios';\r\nimport backend from '../api/backend';\r\n\r\nimport './App.css';\r\nimport 'draft-js/dist/Draft.css';\r\nimport Meaning from './Meaning';\r\nimport Suggestion from './Suggestion';\r\nimport Hashtags from './Hashtags';\r\n\r\nclass App extends Component {\r\n    state = { editorState: EditorState.createEmpty(), hashtags: [], topicData: [] };\r\n\r\n    findWithRegex = (regex, contentBlock, callback) => {\r\n        const text = contentBlock.getText();\r\n        let matchArr, start, end;\r\n        while ((matchArr = regex.exec(text)) !== null) {\r\n          start = matchArr.index;\r\n          end = start + matchArr[0].length;\r\n          callback(start, end);\r\n        }\r\n    };\r\n\r\n    sortPositiveSentences(a, b) {\r\n        if (a.scores.positive > b.scores.positive) {\r\n            return -1;\r\n        } \r\n        if (a.scores.positive < b.scores.positive) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    sortNegativeSentences(a, b) {\r\n        if (a.scores.negative > b.scores.negative) {\r\n            return -1;\r\n        } \r\n        if (a.scores.negative < b.scores.negative) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    onTextAreaChange = async editorState => {\r\n        this.setState({editorState})\r\n        const text = editorState.getCurrentContent().getPlainText();\r\n        if(text.endsWith('.') || text.endsWith('!') || text.endsWith('?')) {\r\n            const response = await backend.post('/finalScore', {\r\n                content: text\r\n            });\r\n            const data = response.data.sentences;\r\n            var compositeData = [];\r\n            var topicData = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                let color = 'none';\r\n                let positive = [];\r\n                let negative = [];\r\n                let posTopics = [];\r\n                let negTopics = [];\r\n                for (let x = 0; x < data[i].aspects.length; x++) {\r\n                    if (data[i].aspects[x].sentiment === 'positive') {\r\n                        positive.push(data[i].aspects[x].text);\r\n                        let opinion = parseInt(data[i].aspects[x].relations[0].ref.split('/').slice(-1)[0]);\r\n                        posTopics.push(data[i].aspects[x].text + ' - ' + data[i].opinions[opinion].text)\r\n                    } else if (data[i].aspects[x].sentiment === 'negative') {\r\n                        negative.push(data[i].aspects[x].text);\r\n                        let opinion = parseInt(data[i].aspects[x].relations[0].ref.split('/').slice(-1)[0]);\r\n                        negTopics.push(data[i].aspects[x].text + ' - ' + data[i].opinions[opinion].text)\r\n                    }\r\n                }\r\n\r\n                var posSuggested = data[i].text;\r\n                var negSuggested = data[i].text;\r\n                for (let i = 0; posTopics.length > i; i++) {\r\n                    const response = await axios.get('https://api.datamuse.com/words?rel_ant=' + posTopics[i].split(' - ')[1])\r\n                    if (response.data.length > 0) {\r\n                        posSuggested = posSuggested.replace(posTopics[i].split(' - ')[1], response.data[0].word);\r\n                    }\r\n                }\r\n                for (let i = 0; negTopics.length > i; i++) {\r\n                    const response = await axios.get('https://api.datamuse.com/words?rel_ant=' + negTopics[i].split(' - ')[1])\r\n                    if (response.data.length > 0) {\r\n                        negSuggested = negSuggested.replace(negTopics[i].split(' - ')[1], response.data[0].word);\r\n                    }\r\n                }\r\n\r\n                topicData.push({ sentence: data[i], posTopics, negTopics, posSuggested: posSuggested, negSuggested })\r\n\r\n                if (data[i].sentiment === 'positive') {\r\n                    color = '#21ba45';\r\n                } else if (data[i].sentiment === 'negative') {\r\n                    color = '#db2828';\r\n                } else if (data[i].sentiment === 'mixed') {\r\n                    color = 'yellow';\r\n                }\r\n                let regex = new RegExp(data[i].text, 'g');\r\n                compositeData.push({\r\n                    strategy: (contentBlock, callback) => {\r\n                        this.findWithRegex(regex, contentBlock, callback);\r\n                    },\r\n                    component: (props) => {\r\n                        return (\r\n                            <Popup trigger={<span {...props} style={{ backgroundColor: color }}>{props.children}</span>}> \r\n                                <b>Positive Topics: </b>{positive.join(', ')}<br />\r\n                                <b>Negative Topics: </b>{negative.join(', ')}<br /><br />\r\n                                <b>Confidence Scores:</b><br />\r\n                                <b>Positive: </b>{data[i].scores.positive}<br />\r\n                                <b>Neutral: </b>{data[i].scores.neutral}<br />\r\n                                <b>Negative: </b>{data[i].scores.negative}\r\n                            </Popup>\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n\r\n            const holisticResponse = await backend.post('/score', {\r\n                content: text\r\n            });\r\n            let spanHighlight = new CompositeDecorator(compositeData);\r\n            this.setState({editorState: EditorState.set(this.state.editorState, {decorator: spanHighlight}), hashtags: holisticResponse.data.top_tags, topicData });\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"ui text container\">\r\n                <h1 className=\"ui center aligned icon huge header\">\r\n                    Sentiment Analysis\r\n                </h1>\r\n\r\n                <Editor className=\"text-area\" editorState={this.state.editorState} onChange={this.onTextAreaChange} />\r\n                <Hashtags hashtags={this.state.hashtags} />\r\n                <Suggestion data={this.state.topicData} />\r\n                <h2 className=\"color-header ui center aligned icon header\">\r\n                    What do the colors mean?\r\n                </h2>\r\n                <Meaning />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}